[keyboard]
name = "Ferris sweep"
product_name = "Ferris sweep"
vendor_id = 0xc2ab
product_id = 0x3939
manufacturer = "DPB"
chip = "rp2040"

# [matrix]
# not used for split keyboards



[layout]
rows = 4
cols = 10
layers = 7
keymap = [
    [ # 0 BASE
        ["Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", ],
        ["MT(A, LGui)", "MT(S, LAlt)", "MT(D, LCtrl)", "MT(F, LShift)", "G", "H", "MT(J, LShift)", "MT(K, LCtrl)", "MT(L, LAlt)", "MT(Semicolon, LGui)", ],
        ["Z", "MT(X, RAlt)", "C", "V", "B", "N", "M", "Comma", "MT(Dot, RAlt)", "Slash", ],
        ["_", "_", "LT(1, Delete)", "LT(2, Backspace)", "LT(3, Enter)", "LT(4, Tab)", "LT(5, Space)", "LT(6, Escape)", "_", "_", ],
    ],
    [ # 1 FUN
        ["_", "_", "_", "_", "_", "PrintScreen", "F7", "F8", "F9", "F12", ],
        ["LGui", "LAlt", "LCtrl", "LShift", "_", "ScrollLock", "F4", "F5", "F6", "F11", ],
        ["_", "RAlt", "_", "_", "_", "Pause", "F1", "F2", "F3", "F10", ],
        ["_", "_", "_", "_", "_", "Menu", "_", "_", "_", "_", ],
    ],
    [ # 2 NUM
        ["_", "_", "_", "_", "_", "LeftBracket", "Kc7", "Kc8", "Kc9", "RightBracket", ],
        ["LGui", "LAlt", "LCtrl", "LShift", "_", "Equal", "Kc4", "Kc5", "Kc6", "Semicolon", ],
        ["_", "RAlt", "_", "_", "_", "Backslash", "Kc1", "Kc2", "Kc3", "Grave", ],
        ["_", "_", "_", "_", "_", "Minus", "Kc0", "Dot", "_", "_", ],
    ],
    [ # 3 SYM
        ["_", "_", "_", "_", "_", "SHIFTED(LeftBracket)","SHIFTED(Kc7)", "SHIFTED(Kc8)", "SHIFTED(Kc9)", "SHIFTED(RightBracket)", ],
        ["LGui", "LAlt", "LCtrl", "LShift", "_", "SHIFTED(Equal)", "SHIFTED(Kc4)", "SHIFTED(Kc5)", "SHIFTED(Kc6)", "SHIFTED(Semicolon)", ],
        ["_", "RAlt", "_", "_", "_", "SHIFTED(Backslash)", "SHIFTED(Kc1)", "SHIFTED(Kc2)", "SHIFTED(Kc3)", "SHIFTED(Grave)", ],
        ["_", "_", "_", "_", "_", "SHIFTED(Kc9)", "SHIFTED(Kc9)", "SHIFTED(Minus)", "_", "_", ],
    ],
    [ # 4 Mouse
        ["_", "_", "_", "_", "_", "Again", "Paste", "Copy", "Cut", "Undo", ],
        ["LGui", "LAlt", "LCtrl", "LShift", "_", "MouseLeft", "MouseDown", "MouseUp", "MouseRight", "_", ],
        ["_", "RAlt", "_", "_", "_", "MouseWheelLeft", "MouseWheelDown", "MouseWheelUp", "MouseWheelRight", "_", ],
        ["_", "_", "MouseBtn3", "MouseBtn1", "MouseBtn2", "_", "_", "_", "_", "_", ],
    ],
    [ # 5 NAV
        ["_", "_", "_", "_", "_", "Again", "Paste", "Copy", "Cut", "Undo", ],
        ["LGui", "LAlt", "LCtrl", "LShift", "_", "Left", "Down", "Up", "Right", "CapsWordToggle", ],
        ["_", "RAlt", "_", "_", "_", "Home", "PageDown", "PageUp", "End", "Insert", ],
        ["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", ],
    ],
    [ # 6 Media
        ["_", "_", "_", "_", "_", "_", "_", "_", "_", "_", ],
        ["LGui", "LAlt", "LCtrl", "LShift", "_", "MediaPrevTrack", "AudioVolDown", "AudioVolUp", "MediaNextTrack", "_", ],
        ["_", "RAlt", "_", "_", "_", "_", "_", "_", "_", "_", ],
        ["_", "_", "_", "_", "_", "MediaStop", "MediaPlayPause", "AudioMute", "_", "_", ],
    ],
]

[storage]
clear_storage = true

[behavior]
tap_hold = { enable_hrm = true, prior_idle_time = "120ms", hold_timeout = "250ms", post_wait_time = "50ms" }

[behavior.combo]
timeout = "150ms"
combos = [
  { actions = ["LT(2, Backspace)", "LT(3, Enter)"], output = "LT(1, Delete)" },
  { actions = ["LT(4, Tab)", "LT(5, Space)"], output = "LT(6, Escape)" },
  { actions = ["SHIFTED(Kc9)", "SHIFTED(Kc0)"], output = "SHIFTED(Minus)" },
  { actions = ["MouseBtn1", "MouseBtn2"], output = "MouseBtn3" },
]


[split]
connection = "serial"

# we are defining the left side to be our primary.
[split.central]
rows = 4
cols = 5
row_offset = 0
col_offset = 0
serial = [{ instance = "PIO0", tx_pin = "PIN_1", rx_pin = "PIN_1" }]
[split.central.matrix]
matrix_type = "direct_pin"
direct_pins=[
    ["PIN_7", "PIN_26", "PIN_27", "PIN_28", "PIN_29", ],
    ["PIN_22", "PIN_20", "PIN_23", "PIN_21", "PIN_0", ],
    ["PIN_2", "PIN_3", "PIN_4", "PIN_5", "PIN_6", ],
    ["_", "_", "_", "PIN_8", "PIN_9", ],
]

[[split.peripheral]]
rows = 4
cols = 5
row_offset = 0
col_offset = 5
serial = [{ instance = "PIO0", tx_pin = "PIN_1", rx_pin = "PIN_1" }]
[split.peripheral.matrix]
matrix_type = "direct_pin"
direct_pins=[
    ["PIN_29", "PIN_28", "PIN_27", "PIN_26", "PIN_7", ],
    ["PIN_0", "PIN_21", "PIN_23", "PIN_20", "PIN_22", ],
    ["PIN_6", "PIN_5", "PIN_4", "PIN_3", "PIN_2", ],
    ["PIN_9", "PIN_8", "_", "_", "_", ],
]
